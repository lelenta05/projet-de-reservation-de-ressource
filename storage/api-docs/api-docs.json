{
    "openapi": "3.0.0",
    "info": {
        "title": "Plateforme de reservation de ressources ",
        "description": " Une startup souhaite disposer d’une plateforme web interne permettant à ses employés de réserver différents types de ressources (salles de réunion, postes de travail, vidéoprojecteurs, etc.). Le back-end sera développé en Laravel, avec une API REST sécurisée, et un front-end Blade pour la démonstration. Les données seront stockées dans MySQL.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080/api",
            "description": "J'utilise Docker qui est un outil qui permet de creer un des conteneurs pour qu'une application puisee tourne correctement . "
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Créer un nouveau utilisateur",
                "operationId": "f367ea894b2ac44a9607f8e0a9a03537",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nom",
                                    "email",
                                    "password",
                                    "role_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Utilisateur créé ainsi que son token ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erreur de validation"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Connexion d'un utilisateur",
                "operationId": "ec9c379d2a959de66404708dd4a9322d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Utilisateur connecté avec son token ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Identifiant incorrecte"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Deconnexion ",
                "operationId": "cc14526f9abd470d63047b1c05aef0c3",
                "responses": {
                    "201": {
                        "description": "Deconnecte ainsi que la suppression de tous les tokens de l'utilisateur concerne . ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Reservation": {
                "required": [
                    "user_id",
                    "ressource_id",
                    "date_debut",
                    "date_fin",
                    "statut"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "ressource_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "date_debut": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-01T10:00:00"
                    },
                    "date_fin": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-02-02T15:30:00"
                    },
                    "statut": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ],
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Ressource": {
                "required": [
                    "nom",
                    "type",
                    "localisation",
                    "description",
                    "capacite"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "nom": {
                        "type": "string",
                        "example": "Salle de Formation"
                    },
                    "type": {
                        "type": "string",
                        "example": "Salle"
                    },
                    "localisation": {
                        "type": "string",
                        "example": "Batiment"
                    },
                    "description": {
                        "type": "string",
                        "example": "C'est une salle de formation "
                    },
                    "capacite": {
                        "type": "integer",
                        "example": 30
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Role": {
                "required": [
                    "nom",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "nom": {
                        "type": "string",
                        "example": "admin"
                    },
                    "description": {
                        "type": "string",
                        "example": "Il a tous les droits dans la plateforme "
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "nom",
                    "email",
                    "password",
                    "role_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "nom": {
                        "type": "string",
                        "example": "User nom"
                    },
                    "email": {
                        "type": "string",
                        "example": "user1@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    },
                    "role_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}